模板方法模式
	模板方法模式是设计模式行为型中最简单的一种设计模式。在实际中你甚至可能经常用到，只是你自己不知道它是一种设计模式罢了。
	
	模板方法模式定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。
	
	角色：
		抽象类（AbstractClass）: 定义抽象的原语操作，具体的子类将重定义它们以实现一个算法，实现一个模板方法,定义一个算法的骨架。该模板方法不仅调用原语操作，也调用定义
		具体子类 （ConcreteClass）: 实现原语操作以完成算法中与特定子类相关的步骤。

	优点：
		1.模板方法模式在一个类中形式化地定义算法，而由它的子类实现细节的处理。
		2.模板方法是一种代码复用的基本技术。它们在类库中尤为重要，它们提取了类库中的公共行为。
	缺点:
		每个不同的实现都需要定义一个子类，这会导致类的个数增加，系统更加庞大，设计也更加抽象，但是更加符合“单一职责原则”，使得类的内聚性得以提高。

	总结：其实就是多态的体现